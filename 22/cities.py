#!../venv/bin/python3
#ToDo
'''
Легенда игры:
    - компьютер выводит случайный город из списка всех городов
    - пользователь пишет название города и нажимает Enter
    - программа проверяет существование этого города (что такое город есть в полном списке городов)
    - программа проверяет не назывался ли такой город кем-то из игроков
    - программа проверяет, что введенный город начинается с той же буквы, на которую заканчивается предыдущий город (не забудьте, существуют буквы с которых не существует названия городов, тогда пользователь вводит город на первую букву предыдущего слова)
    - если такого города не существует или такой город уже назывался, то пользователю предлагается повторить попытку ввода
    - если пользователь сделал 5 неудачных попыток ввода, то считается, что он проиграл
    - если введенный пользователем город валиден, то ход за компьютером
    - компьютер из существующего списка городов находит название города, начинающегося с последней буквы предыдущего города (если города с такой буквы не существует, то находится город, начинающийся с первой буквы предыдущего города)
    - если компьютер не смог найти подходящий город, то пользователь выигрывает.
'''
#Чтение и запись в файл 

# V -Добавление в словарь/множество из Файла 
#  -Проверка на соответствие названия города маске <Слово-Слово-Слово-...>  <Слово Слово Слово ...> 
# V-Запись списка городов в файл лога

#Интерфейс

# V-Запрос путей при  отсутствии стандартных  до файла с городом
# -Запрос города 


#Алгоритм выбора города компьютером
# -Проверить есть ли возможность сделать ход у игрока (При невозможности возвращать ничью?) 


#Функция проверки валидности города введенного игроком
# -Город в списке городов 
# -Город не назывался до этого 
# -Город  начинается с нужной буквы 
# -Функция  сравнения городов
import csv 
from datetime import datetime
import os 

cities_filename = "cities_database.csv"
cities_sample_list = ['Сургут','Лянтор']

city_set = set()

while (not os.path.exists(cities_filename)):
	print("Файл базы данных городов не найден")
	print("Введите путь до файла с базой городов *.csv")
	cities_filename=input()


with open(cities_filename, mode = "r",encoding = "utf-8") as cities_file:
    city_reader = csv.reader(cities_file)
    for city in city_reader:
        #!!! Проверить по маске
        city_str="".join(city)
        city_set.add(city_str)



print(city_set)
today=datetime.today()
time_stamp=today.strftime("%d-%m-%Y-%H:%M")
print(time_stamp)

if not os.path.exists('log/'):
   os.mkdir("log")

log_file_name="log/"+time_stamp+".csv"
with open(log_file_name,mode='w', encoding = "utf-8") as log_file:
    log_writer= csv.writer(log_file)
    for city in cities_sample_list:
        log_writer.writerow([city])
